---
layout:     post
title:      Update 2 - Presentation redux
date:       2015-09-25 12:00:00
author:     Perry Ellis
tags: 	
---

<!-- Start Writing Below in Markdown -->

# What is this post?
This is a brief recap of my 1st presentation in class. This post will cover some of the technical details I presented on as well as serving as a place to leave comments.

# Redux

## Why curvature and why a torus?
The active nematic material we are working with is a *soft* material. This implies that it is easily deformed and thus sensitive to forces that *hard* materials can easily ignore.  Macroscopic curvature is one of these forces. In fact, the connection between nematic order (specifically in thermotropic and lyotropic liquid crystals) and curvature is well-studied and actually lies at the heart of the free-energy typically used to evaluate nematic configurations.

We are looking at active nematics on the surface of a torus becuase the torus gives us an opportunity to examine the effect of changing curvature.  Unlike a sphere, the curvature on the surface of a torus changes depending on the location. For example, a torus will always have a smoothly varying Gaussian curvature between its maxmimum along the outer ring and its minimum along the inner ring. In addition, the maximum Gaussian curvature is always positive and the minimum Gaussian curvature is always negative.

## How do we analyze the data
In the last post, I chose the nematic order paramter, ***Q***, a symmetric traceless rank-2 tensor, as the microstructure function.  As a brief aside, we use a rank-2 tensor due to the head-tail symmetry of the nematic structure. If we tried to define a vector (rank-1 tensor) for the nematic, we would always find that the vector was 0. 

To determine ***Q*** everywhere in our data, we first use a technique called "Coherence-enhanced diffusion filtering." The basic idea behind this technigue is to make an averaged rank-2 tensor from the gradient of the image intensity. From this "structure tensor", we get the local orientation everywhere in the image. We then average over this local orientation to find ***Q***. An example analysis showing how we move from the raw data to the microstructure function is below.




<!-- Here is a table with some videos-->
<table border="0" cellspacing="0" width = "100%" cellpadding="0"  frame="void" rules="void" align = "center">
	<tr>
		<td width="50%" align="center">
			<p	>
			<b>z-stack</b>
			</p>
		</td>				
		<td width="50%" align="center">
			<p>
			<b>maximum intensity projection</b>
			</p>
		</td>				
	</tr>
	<tr>
		<td width="50%" align="center">
			<video height="330" id="video" controls='controls'>
				<source src="/MIC-Active-Nematics-Torus/img/post1/zstack_scan.mp4" type="video/mp4">
				<source src="/MIC-Active-Nematics-Torus/img/post1/zstack_scan.webm" type="video/webm">
				Your browser doesn't seem to support the video tag.
			</video>
		</td>				
		<td width="50%" align="center">
			<p align="center"><font size="3"><font face="calibri">
				<img src="../img/post3/MAX_D3_0001.jpg" height=330  />	
			</p>
		</td>				
	</tr>
</table>


 1. First, we take our 3D (x,y,z) array of data and project it to a 2D (x,y) array by only keeping the maximum intensity along z for each (x,y) coordinate. Above, a video scanning through the 3D array along z is seen on the left and the maximum intensity projection for a portion of the torus is seen on the right.
 
 2. We filter the maximum intensity projection with a Gaussian filter to denoise the image. Then, we take the gradient of the denoised image and construct a symmetric tensor using the outer product of the gradient with itself.
 
 3. To get the structure tensor we componentwise average the gradient tensor using a Gaussian filter.  The standard deviation of this Gaussian filter should be about the size of the nematic features we want to characterize. The local orientation at every point is given by the eiqenvector associated with the smallest eigenvalue of the structure tensor at that point.
 
 4. Lastly, we average over this local orientation using a median disk filter to find ***Q*** for every point. We represent ***Q*** using two quantities, the director "**n**" and the degree of alignment "S". Now that we have a digital representation of our microstructure from our raw data, we next need to contruct the project workflow.











